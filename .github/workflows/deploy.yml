# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: build and deploy to S3

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
        id-token: write
        contents: read

jobs:
  build:
    if: ${{contains(github.event.head_commit.message, '[github-action]')}}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Git Clone the repository
      uses: actions/checkout@v5

    - name: "Configure AWS Credentials"
      uses: aws-actions/configure-aws-credentials@v5.1.0
      
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: samplerolesession
        aws-region: ${{vars.AWS_REGION}}
        # AWS Access Key ID. Provide this key if you want to assume a role using access keys rather than a web identity token.
        # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        # AWS Secret Access Key. Required if aws-access-key-id is provided.
        # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - run: cp .env.example .env
    - run: npm install
    - run: npm run build

    - run: aws s3 sync dist/ s3://${{vars.BUCKET_NAME}}/
    - run: aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
